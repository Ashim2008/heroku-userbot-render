# ------------------------------------------------------------
# Module: LogSettings
# Description: Manage logging settings and filters 
# Author: Heroku Userbot
# ------------------------------------------------------------
# Licensed under the GNU AGPLv3
# https://www.gnu.org/licenses/agpl-3.0.html
# ------------------------------------------------------------
# Commands: .connectionspam .logfilters
# ------------------------------------------------------------

from .. import loader, utils

@loader.tds
class LogSettingsMod(loader.Module):
    """Manage logging settings and filters"""
    strings = {
        "name": "LogSettings",
        "connection_spam_enabled": "<emoji document_id=5472146462362048818>‚úÖ</emoji> <b>Connection error messages enabled</b>\n\n<i>Now you will see messages about internet connection problems in logs.</i>",
        "connection_spam_disabled": "<emoji document_id=5465300982628759216>‚ùå</emoji> <b>Connection error messages disabled</b>\n\n<i>Connection error messages are now hidden from logs.</i>",
        "current_settings": "<emoji document_id=5472308992514464048>‚öôÔ∏è</emoji> <b>Current log filter settings:</b>\n\n<emoji document_id=5463280316042533202>üì°</emoji> <b>Connection error messages:</b> <code>{}</code>\n<emoji document_id=5469741319330996757>üìä</emoji> <b>Failed updates filter:</b> <code>enabled</code>",
        "settings_help": "<emoji document_id=5472308992514464048>‚öôÔ∏è</emoji> <b>Log Settings Help</b>\n\n<b>Available commands:</b>\n<code>.connectionspam</code> - Toggle connection error messages\n<code>.logfilters</code> - View current filter settings\n\n<b>Filters:</b>\n‚Ä¢ <b>Connection Spam Filter</b> - Hides annoying connection error messages\n‚Ä¢ <b>Update Fetch Filter</b> - Hides 'Failed to fetch updates' messages"
    }

    strings_ru = {
        "name": "LogSettings", 
        "connection_spam_enabled": "<emoji document_id=5472146462362048818>‚úÖ</emoji> <b>–°–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã</b>\n\n<i>–¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –≤–∏–¥–µ—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º –≤ –ª–æ–≥–∞—Ö.</i>",
        "connection_spam_disabled": "<emoji document_id=5465300982628759216>‚ùå</emoji> <b>–°–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã</b>\n\n<i>–°–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å–∫—Ä—ã—Ç—ã –∏–∑ –ª–æ–≥–æ–≤.</i>",
        "current_settings": "<emoji document_id=5472308992514464048>‚öôÔ∏è</emoji> <b>–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –ª–æ–≥–æ–≤:</b>\n\n<emoji document_id=5463280316042533202>üì°</emoji> <b>–°–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:</b> <code>{}</code>\n<emoji document_id=5469741319330996757>üìä</emoji> <b>–§–∏–ª—å—Ç—Ä –Ω–µ—É–¥–∞—á–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π:</b> <code>–≤–∫–ª—é—á–µ–Ω</code>",
        "settings_help": "<emoji document_id=5472308992514464048>‚öôÔ∏è</emoji> <b>–ü–æ–º–æ—â—å –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º –ª–æ–≥–æ–≤</b>\n\n<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n<code>.connectionspam</code> - –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è\n<code>.logfilters</code> - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤\n\n<b>–§–∏–ª—å—Ç—Ä—ã:</b>\n‚Ä¢ <b>–§–∏–ª—å—Ç—Ä —Å–ø–∞–º–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è</b> - –°–∫—Ä—ã–≤–∞–µ—Ç –Ω–∞–¥–æ–µ–¥–ª–∏–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è\n‚Ä¢ <b>–§–∏–ª—å—Ç—Ä –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π</b> - –°–∫—Ä—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è 'Failed to fetch updates'"
    }

    def __init__(self):
        self.name = self.strings["name"]

    async def client_ready(self):
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        if self.db.get(self.__class__.__name__, "connection_spam_disabled") is None:
            self.db.set(self.__class__.__name__, "connection_spam_disabled", True)  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –æ—Ç–∫–ª—é—á–µ–Ω–æ

    def is_connection_spam_disabled(self) -> bool:
        """Check if connection spam messages are disabled"""
        return self.db.get(self.__class__.__name__, "connection_spam_disabled", True)

    @loader.command(
        ru_doc="–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –ø–æ–∫–∞–∑ —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–∞—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –≤ –ª–æ–≥–∞—Ö",
        en_doc="Toggle connection error messages in logs"
    )
    async def connectionspam(self, message):
        """Toggle connection error messages in logs"""
        current_state = self.is_connection_spam_disabled()
        new_state = not current_state
        
        self.db.set(self.__class__.__name__, "connection_spam_disabled", new_state)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è log.py
        import heroku.log as log_module
        log_module._connection_spam_disabled = new_state
        
        if new_state:
            await utils.answer(message, self.strings["connection_spam_disabled"])
        else:
            await utils.answer(message, self.strings["connection_spam_enabled"])

    @loader.command(
        ru_doc="–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –ª–æ–≥–æ–≤",
        en_doc="Show current log filter settings"
    )
    async def logfilters(self, message):
        """Show current log filter settings"""
        connection_spam_disabled = self.is_connection_spam_disabled()
        connection_status = "–æ—Ç–∫–ª—é—á–µ–Ω—ã" if connection_spam_disabled else "–≤–∫–ª—é—á–µ–Ω—ã"
        
        await utils.answer(
            message, 
            self.strings["current_settings"].format(connection_status)
        )

    @loader.command(
        ru_doc="–ü–æ–º–æ—â—å –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è",
        en_doc="Help for logging settings"
    )
    async def loghelp(self, message):
        """Help for logging settings"""
        await utils.answer(message, self.strings["settings_help"])